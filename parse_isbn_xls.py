#!/usr/bin/env python

"""
	Tool to parse an Excel (xls) file containing ISBN
	format as specified below as generated by Android App
	LoMag Barcode Scanner free (by LongInt)
	Format:
		first row: header: "item code", "Quantity", "Unit prize", "Serial number"
		first column: ISBN
	Output: csv : ISBN, author, title, publisher
"""

"""
	Major issue: https://stackoverflow.com/questions/8542274/python-xlrd-receiving-float-from-excel-text-cell?rq=1
	Solution : none, epic fail
"""

import xlrd
import isbnlib
import sys
import logging
import argparse

__name__ = "parse_isbn_xls"
__copyright__ = "Copyright 2018, Olaf Zevenboom"
__author__ = "Olaf Zevenboom"
__credits__ = ["Olaf Zevenboom"]
__license__ = "http://www.wtfpl.net/"
__version__ = "0.1"
__status__ = "Development"

isbn_service = 'openl'

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

parser = argparse.ArgumentParser(description='ISBN Excelfile parser')
parser.add_argument('-i', '--input', help='Input filename', required=True)
parser.add_argument('-o', '--output', help='Output filename', required=True)
args = parser.parse_args()

isbnxlsfile = args.input
logger.info("About to start parsing ISBN Excel file: %s" % isbnxlsfile)

try:
	wb = xlrd.open_workbook(isbnxlsfile)
except xlrd.XLRDError as e:
	print(e)
	logger.info(e)
	exit(1)

isbnsheet = wb.sheet_by_index(0)  # first and only sheet

number_of_rows = isbnsheet.nrows
number_of_columns = isbnsheet.ncols
logger.info("Found %d alleged ISBN entries" % (number_of_rows-1))

col_isbn = 1
col_quantity = 2
col_unitprice = 3
col_serialnumber = 4

for col in range(1, number_of_columns):
	for row in range(1, number_of_rows):
		cell = isbnsheet.cell(row, col).value
		if col==1: logger.info("(row=%d, col=%d, value=%s" % (row, col, cell))

items = []
for row in range(2, number_of_rows):
	isbncelltype= isbnsheet.cell_type(row, col_isbn) # 0=unknown 1=date 2=number 3=general 4=text
	logger.info("Cell (%d,%d) is of type %s" % (row, col_isbn, isbncelltype))
	#isbncell = isbnsheet.cell(row, col_isbn).value
	isbncell = isbnsheet.cell_value(row, col_isbn)
	logger.info("Read: %s from cell (%d,%d)" % (isbncell, row, col_isbn))
	# check if it is a proper ISBN
	isbn = isbncell
	items.append(isbn)
	bibtex = isbnlib.registry.bibformatters['bibtex']
	print(bibtex(isbnlib.meta(isbn, isbn_service)))

print("Finished")
